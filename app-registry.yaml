################################################################################
##
## HeLx Application Registry
##  
##   The registry consolidates metadata links to application specifications.
##   The registry's main components are:
##     * Metadata about the registry itself
##     * Repositories describing sources of application metadata.
##     * Sub-Registries providing contexts for sets of applications.
##
##   Each application has an identifier, name, description, and a link to its 
##   specification. Applications may currently be specified in the 
##   docker-compose format though we also expect to broaden the scope of 
##   apps to include launching websites and other methods.
##
##   When a platform launches an application, it needs to know what endpoints
##   to present upstream. Apps can also specify a map of service names to port
##   numbers. The service and port name must match the name of a container
##   in the docker-compose specification and its exposed port respectively.
##
##   Contexts implement a simple form of inheritance. Each context may speicify
##   a list of contexts it extends. Apps from extended contexts will be added
##   to the extending context's apps.
##
##   This is alpha. Expect significant changes to modularity, inheritance,
##   and naming coming soon.
##
##   Next steps:
##     * Requirements: allow apps to specify that they require services including
##        - A back end service like a database, spark, dicom api, etc.
##        - A storage device like a pvc with a particular name or configuration.
##     * Compilation: Compile the registry verifying
##        - All required elements are either provided explicitly or can be
##          inferred.
##        - That designated network resources exist (200 http status).
##        - That the docker-compose file is syntactically valid.
##        - That the service name to export is in the docker-compose file and
##          that one is specified.
##     * Semantic annotation: Annotate apps with the Biolink model and EDAM
##        ontology to enable semantic search.
##
################################################################################
api: Tycho
version: 0.0.1
metadata:
  id: helx-app-registry
  name: HeLx Application Registry
  author: HeLx Dev
  description: An alpha metadata registry for HeLx applications.
repositories:
  helx_apps:
    # This is the Dockstore app prototype repository. GA4GH TRS in future?
    description: Main repository for HeLx Apps and Tools
    # URL is in the form of raw access of files from GitHub.
    # url: https://github.com/[corporation]/[project]/[branch]/[app specs directory]
    # url: https://github.com/helxplatform/helx-apps/raw/external-app-registry/app-specs
    # To use the same git repo as this file is in just specify the directory.
    # url: app-specs
    url: app-specs
settings:
  helx_registry: containers.renci.org
  third_party_registry: docker.io
contexts:
  # The common context provides a convenient base set of applications.
  # Other contexts can extend it to include these apps.
  sys:
    apps:
      jupyter-ds:
        ext:
          kube:
            livenessProbe:
              cmd: ["pgrep", "jupyter" ]
              delay: 5
              period: 5
      jupyter-education:
        ext:
          kube:
            livenessProbe:
              cmd: ["pgrep", "jupyter" ]
              delay: 5
              period: 5
      jupyter-helx-notebook:
        ext:
          kube:
            livenessProbe:
              cmd: ["pgrep", "jupyter" ]
              delay: 5
              period: 5
      jupyter-lab:
        ext:
          kube:
            livenessProbe:
              cmd: ["pgrep", "jupyter" ]
              delay: 5
              period: 5
      cloud-top:
        ext:
          kube:
            readinessProbe: none
      scout:
        ext:
          kube:
            readinessProbe: none
      imagej:
        ext:
          kube:
            readinessProbe: none
      napari:
        ext:
          kube:
            readinessProbe: none
      octave:
        ext:
          kube:
            readinessProbe: none
      atlas:
        ext:
          kube:
            readinessProbe: none
      rstudio-server:
        ext:
          kube:
            readinessProbe: none
      webtop:
        ext:
          kube:
            readinessProbe: none
      webtop-image-apps:
        ext:
          kube:
            readinessProbe: none
      webtop-octave:
        ext:
          kube:
            readinessProbe: none
      webtop-pgadmin:
        ext:
          kube:
            readinessProbe: none
      pgadmin:
        ext:
          kube:
            readinessProbe: none
              # httpGet:
              #   path: "/misc/ping"
              #   port: "8080"
  common:
    name: HeLx Common App Registry
    mixin:
      - sys
    apps:
      helx-helx-notebook:
        name: Jupyter HeLx Notebook
        description: Based on the Jupyter SciPy Notebook.
        details: Includes popular packages from the scientific Python ecosystem.
        docs: https://jupyter-docker-stacks.readthedocs.io/en/latest/using/selecting.html#jupyter-scipy-notebook
        services:
          jupyter-helx-notebook: "8888"
        proxy-rewrite-rule: True
        count: 1
      filebrowser:
        name: File Browser
        description: File Browser - a utility for browsing files through a web interface
        details: File Browser provides a web interface for browsing files in a cloud environment.
        docs: https://filebrowser.org/
        services:
          filebrowser: "8888"
        count: 1
      webtop-octave:
        name: Octave
        description: A scientific programming language largely compatible with MATLAB.
        details: GNU Octave is a high-level language, primarily intended for numerical computations.
        docs: https://www.gnu.org/software/octave 
        services:
          webtop-octave : "3000"
        count: 1
  eduhelx-data720:
    name: UNC Helx for Education DATA720
    mixin:
      - sys
    apps:
      jupyter-helx-tensorflow-nb:
        name: Jupyter HeLx TF Notebook
        description: Based on the Jupyter SciPy Notebook.
        details: Includes popular packages from the scientific Python ecosystem.
        docs: https://jupyter-docker-stacks.readthedocs.io/en/latest/using/selecting.html#jupyter-scipy-notebook
        services:
          jupyter-helx-tensorflow-nb: "8888"
        proxy-rewrite-rule: True
        count: 1
      # jupyter-helx-notebook:
      #   name: Jupyter HeLx Notebook
      #   description: Based on the Jupyter SciPy Notebook.
      #   details: Includes popular packages from the scientific Python ecosystem.
      #   docs: https://jupyter-docker-stacks.readthedocs.io/en/latest/using/selecting.html#jupyter-scipy-notebook
      #   services:
      #     jupyter-helx-notebook: "8888"
      #   proxy-rewrite-rule: True
      #   count: 1
      filebrowser:
        name: File Browser
        description: File Browser - a utility for browsing files through a web interface
        details: File Browser provides a web interface for browsing files in a cloud environment.
        docs: https://filebrowser.org/
        services:
          filebrowser: "8888"
        count: 1
      pgadmin:
        name: pgAdmin
        description: pgAdmin - A database administration program for PostgreSQL.
        details: pgAdmin is the most popular and feature rich Open Source administration and development platform for PostgreSQL, the most advanced Open Source database in the world.
        docs: https://pgadmin.org/
        services:
          pgadmin: "8080"
        proxy-rewrite-rule: True
        count: 1
      rstudio-server:
        name: RStudio Server
        description: An integrated development environment for R.
        details: Has a console, syntax-highlighting editor that supports direct code execution, and tools for plotting, history, debugging and workspace management.
        docs: https://www.rstudio.com/
        services:
          rstudio-server: "8787"
        count: 1
        proxy-rewrite:
          enabled: True
          target: /